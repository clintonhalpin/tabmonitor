{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/js/inject.js","inject.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","storeName","TabDate","date","updatedAt","Date","uid","getDateUID","tabs","getFullYear","toString","getMonth","getDate","checkStorage","cache","p","Promise","resolve","reject","chrome","storage","local","get","item","renderOffLineApp","document","getElementsByClassName","style","opacity","addEventListener","navigator","onLine","then","res","store","days","aggregate","push","console","log"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCAA,YACA,IAAIK,GAAY,WAEZC,EAAU,WACZ,OACEC,MACEC,UAAW,GAAIC,MACfC,IAAKC,KAEPC,KAAM,IAIND,EAAa,WACf,OAAO,GAAIF,OAAOI,cAAcC,YAAa,GAAIL,OAAOM,WAAWD,YAAa,GAAIL,OAAOO,UAAUF,YAGnGG,EAAe,SAASC,GACxB,GAAIC,GAAI,GAAIC,SAAQ,SAASC,EAASC,GAClCC,OAAOC,QAAQC,MAAMC,IAAIR,EAAO,SAASS,GACvCN,EAAQM,MAId,OAAOR,IAcPS,EAAmB,WACrBC,SAASC,uBAAuB,OAAO,GAAGC,MAAMC,QAAU,EAC1DH,SAASC,uBAAuB,WAAW,GAAGC,MAAMC,QAAU,EAC/DH,UAGQI,iBAAiB,mBAAoB,WACxCC,UAAUC,OAGZlB,EAAcZ,GAAY+B,KAAK,SAASC,GACtC,GAAIC,IACFC,QACAC,aACAF,GAGIC,KAAKE,KAAK,GAAInC,IACpBgC,EAAMC,KAAKE,KAAK,GAAInC,IACpBgC,EAAMC,KAAKE,KAAK,GAAInC,IACpBgC,EAAMC,KAAKE,KAAK,GAAInC,IACpBgC,EAAMC,KAAKE,KAAK,GAAInC,IACpBgC,EAAMC,KAAKE,KAAK,GAAInC,IACpBgC,EAAMC,KAAKE,KAAK,GAAInC,IAAUgC,EAGxBC,KAAK,GAAG3B,OACd0B,EAAMC,KAAK,GAAG3B,OACd0B,EAAMC,KAAK,GAAG3B,OACd0B,EAAMC,KAAK,GAAG3B,OACd0B,EAAMC,KAAK,GAAG3B,OACd0B,EAAMC,KAAK,GAAG3B,OACd0B,EAAMC,KAAK,GAAG3B,OACd0B,EAAMC,KAAK,GAAG3B,OAEd8B,QAAQC,IAAIL,KA3BdV,gBCkCO","file":"inject.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict'; \nvar storeName = 'appCache';\n\nvar TabDate = function() { \n  return {\n    date: {\n      updatedAt: new Date(),\n      uid: getDateUID()\n    },\n    tabs: 0\n  }\n};\n\nvar getDateUID = function() {\n  return new Date().getFullYear().toString() + new Date().getMonth().toString() + new Date().getDate().toString();\n}\n\nvar checkStorage = function(cache) {\n    var p = new Promise(function(resolve, reject){\n        chrome.storage.local.get(cache, function(item) {\n          resolve(item)\n        })\n    });\n\n    return p\n}\n\nvar setStorage = function(cache) {\n  chrome.storage.local.set(cache, function(res) {\n    console.log(res)\n  })\n}\n\nvar setInnerHTML = function(el, data) {\n  var element = document.getElementsByClassName(el)[0];\n  element.innerHTML = data;\n}\n\nvar renderOffLineApp = function() {\n  document.getElementsByClassName(\"app\")[0].style.opacity = 0;\n  document.getElementsByClassName(\"offline\")[0].style.opacity = 1;\n}\n\n// Light the fires and kick the tires\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  if(!navigator.onLine) {\n    renderOffLineApp();\n  } else {\n    checkStorage( storeName ).then(function(res) {\n      var store = {\n        days: [],\n        aggregate: {}\n      };\n\n      // Construct New TabDate ( Day with Analytics )\n      store.days.push(new TabDate())\n      store.days.push(new TabDate())\n      store.days.push(new TabDate())\n      store.days.push(new TabDate())\n      store.days.push(new TabDate())\n      store.days.push(new TabDate())\n      store.days.push(new TabDate())\n\n      // Increment Tabs\n      store.days[0].tabs++\n      store.days[0].tabs++\n      store.days[1].tabs++\n      store.days[2].tabs++\n      store.days[3].tabs++\n      store.days[4].tabs++\n      store.days[5].tabs++\n      store.days[6].tabs++\n\n      console.log(store)\n    });\n  }\n});","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar storeName = 'appCache';\n\nvar TabDate = function () {\n  return {\n    date: {\n      updatedAt: new Date(),\n      uid: getDateUID()\n    },\n    tabs: 0\n  };\n};\n\nvar getDateUID = function () {\n  return new Date().getFullYear().toString() + new Date().getMonth().toString() + new Date().getDate().toString();\n};\n\nvar checkStorage = function (cache) {\n  var p = new Promise(function (resolve, reject) {\n    chrome.storage.local.get(cache, function (item) {\n      resolve(item);\n    });\n  });\n\n  return p;\n};\n\nvar setStorage = function (cache) {\n  chrome.storage.local.set(cache, function (res) {\n    console.log(res);\n  });\n};\n\nvar setInnerHTML = function (el, data) {\n  var element = document.getElementsByClassName(el)[0];\n  element.innerHTML = data;\n};\n\nvar renderOffLineApp = function () {\n  document.getElementsByClassName(\"app\")[0].style.opacity = 0;\n  document.getElementsByClassName(\"offline\")[0].style.opacity = 1;\n};\n\n// Light the fires and kick the tires\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  if (!navigator.onLine) {\n    renderOffLineApp();\n  } else {\n    checkStorage(storeName).then(function (res) {\n      var store = {\n        days: [],\n        aggregate: {}\n      };\n\n      // Construct New TabDate ( Day with Analytics )\n      store.days.push(new TabDate());\n      store.days.push(new TabDate());\n      store.days.push(new TabDate());\n      store.days.push(new TabDate());\n      store.days.push(new TabDate());\n      store.days.push(new TabDate());\n      store.days.push(new TabDate());\n\n      // Increment Tabs\n      store.days[0].tabs++;\n      store.days[0].tabs++;\n      store.days[1].tabs++;\n      store.days[2].tabs++;\n      store.days[3].tabs++;\n      store.days[4].tabs++;\n      store.days[5].tabs++;\n      store.days[6].tabs++;\n\n      console.log(store);\n    });\n  }\n});\n\n},{}]},{},[1])\n\n"],"sourceRoot":"/source/"}